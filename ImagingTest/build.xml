<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="ImagingTest">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse/jee-2019-12/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="ImagingTest.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/commons-imaging-1.0-alpha2-javadoc.jar"/>
        <pathelement location="lib/commons-imaging-1.0-alpha2-sources.jar"/>
        <pathelement location="lib/commons-imaging-1.0-alpha2-test-sources.jar"/>
        <pathelement location="lib/commons-imaging-1.0-alpha2-tests.jar"/>
        <pathelement location="lib/commons-imaging-1.0-alpha2.jar"/>
        <pathelement location="lib/hk2-mockito-2.5.0-b63-javadoc.jar"/>
        <pathelement location="lib/hk2-mockito-2.5.0-b63-sources.jar"/>
        <pathelement location="lib/hk2-mockito-2.5.0-b63.jar"/>
        <pathelement location="lib/mockito-all-2.0.2-beta.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.apiguardian_1.1.0.v20190826-0900.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
        <pathelement location="lib/org.junit.jupiter.api_5.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.jupiter.engine_5.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.jupiter.migrationsupport_5.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.jupiter.params_5.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.platform.commons_1.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.platform.engine_1.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.platform.launcher_1.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.platform.runner_1.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.platform.suite.api_1.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.junit.vintage.engine_5.5.1.v20190826-0900.jar"/>
        <pathelement location="lib/org.opentest4j_1.2.0.v20190826-0900.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="Test">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="Test"/>
            <classpath refid="ImagingTest.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="JunitImag.testGet">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="mainClass.JunitImag" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="ImagingTest.classpath"/>
        </junit>
    </target>
    <target name="JunitImag.testGet (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="Test.JunitImag" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="ImagingTest.classpath"/>
        </junit>
    </target>
    <target name="JunitImag">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="Test.JunitImag" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="ImagingTest.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
    <target name="ImagingTest">
    	<junit printsummary="on" fork="true" showoutput="true">
    		<classpath>
    			<filelist dir="${lib.dir}" includes="**/*.jar" />
    			<pathelement path="${dest}"/>
    		</classpath>
    		<formatter type="xml"/>
    		<batchtest todir="${report folder}">
    			<fileset dir="${dest}">
    				<include name="**/*Test*.*"/>
    			</fileset>
    		</batchtest>
    	</junit>
    	<junitreport todir="${report folder}">
    		<fileset dir="${report folder}">
    			<include name="Test-*.xml" />
    		</fileset>
    		<report format="frames" todir="${report folder}"/>
    	</junitreport>
    </target>
</project>
